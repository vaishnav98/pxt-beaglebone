declare namespace pins {
    //% fixedInstance shim=pxt::getPin(USR0)
    const USR0: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(USR1)
    const USR1: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(USR2)
    const USR2: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(USR3)
    const USR3: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_02)
    const P1_02: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P1_03)
    const P1_03: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_04)
    const P1_04: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_06)
    const P1_06: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_08)
    const P1_08: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_10)
    const P1_10: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_12)
    const P1_12: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_19)
    const P1_19: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P1_19)
    const Light_Sensor: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P1_20)
    const P1_20: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_21)
    const P1_21: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P1_23)
    const P1_23: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P1_25)
    const P1_25: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P1_26)
    const P1_26: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_27)
    const P1_27: AnalogInPin;     
    //% fixedInstance shim=pxt::getPin(P1_28)
    const P1_28: DigitalInOutPin;    
    //% fixedInstance shim=pxt::getPin(P1_29)
    const P1_29: DigitalInOutPin;     
     //% fixedInstance shim=pxt::getPin(P1_29)
     const R_Button: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P1_30)
    const P1_30: DigitalInOutPin;    
    //% fixedInstance shim=pxt::getPin(P1_31)
    const P1_31: DigitalInOutPin;      
    //% fixedInstance shim=pxt::getPin(P1_32)
    const P1_32: DigitalInOutPin;    
    //% fixedInstance shim=pxt::getPin(P1_33)
    const P1_33: PwmOnlyPin;      
    //% fixedInstance shim=pxt::getPin(P1_34)
    const P1_34: DigitalInOutPin;    
    //% fixedInstance shim=pxt::getPin(P1_35)
    const P1_35: DigitalInOutPin;      
    //% fixedInstance shim=pxt::getPin(P1_36)
    const P1_36: PwmOnlyPin;

    //% fixedInstance shim=pxt::getPin(P2_01)
    const P2_01: PwmOnlyPin;
    //% fixedInstance shim=pxt::getPin(P2_02)
    const P2_02: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_03)
    const P2_03: PwmOnlyPin;
    //% fixedInstance shim=pxt::getPin(P2_04)
    const P2_04: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_05)
    const P2_05: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_06)
    const P2_06: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_07)
    const P2_07: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_08)
    const P2_08: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_09)
    const P2_09: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_10)
    const P2_10: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_11)
    const P2_11: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_17)
    const P2_17: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_18)
    const P2_18: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_19)
    const P2_19: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_20)
    const P2_20: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_22)
    const P2_22: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_24)
    const P2_24: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_25)
    const P2_25: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_27)
    const P2_27: DigitalInOutPin;    
    //% fixedInstance shim=pxt::getPin(P2_28)
    const P2_28: DigitalInOutPin;    
    //% fixedInstance shim=pxt::getPin(P2_29)
    const P2_29: DigitalInOutPin;    
    //% fixedInstance shim=pxt::getPin(P2_30)
    const P2_30: DigitalInOutPin;       
    //% fixedInstance shim=pxt::getPin(P2_31)
    const P2_31: DigitalInOutPin;       
    //% fixedInstance shim=pxt::getPin(P2_32)
    const P2_32: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_33)
    const P2_33: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_33)
    const L_Button: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P2_34)
    const P2_34: DigitalInOutPin;       
    //% fixedInstance shim=pxt::getPin(P2_35)
    const P2_35: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P2_36)
    const P2_36: AnalogInPin;
}